@page
@model IndexModel
@using System.Text;
@using System.Globalization;
@{
    ViewData["Title"] = "Films";
}

	<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.3/jquery.min.js"></script>
	<style type="text/css">
		span.stars, span.stars span {
			display: inline-block;
			background: url(/images/stars.png) 0 -16px repeat-x;
			width: 160px;
			height: 16px;
		}
	
		span.stars span {
			background-position: 0 0;
		}

        h2 {
            padding: 0px;
            margin: 0px;
        }
	</style>

    @functions 
    {
        string FormatQueryString(decimal? minrating, bool notyetrated, Cert cert)
        {
            StringBuilder sb = null;
            if (minrating.HasValue)
            {
                if (sb == null)
                    sb = new StringBuilder();
                else
                    sb.Append('&');
                sb.Append("minrating=");
                sb.Append(minrating.Value.ToString(CultureInfo.InvariantCulture.NumberFormat));
            }
            if (notyetrated)
            {
                if (sb == null)
                    sb = new StringBuilder();
                else
                    sb.Append('&');
                sb.Append("notyetrated=true");
            }
            if (cert != Cert.all)
            {
                if (sb == null)
                    sb = new StringBuilder();
                else
                    sb.Append('&');
                sb.Append("cert=");
                sb.Append(cert.ToString("g"));
            }
            return sb?.ToString() ?? "";
        }

        string FormatQueryStringWithMinRating(decimal? minrating)
        {
            return FormatQueryString(minrating, Model.FilterNotYetRated, Model.FilterCert);
        }

        string FormatQueryStringWithNotYetRated(bool notyetrated)
        {
            return FormatQueryString(Model.FilterMinRating, notyetrated, Model.FilterCert);
        }

        string FormatQueryStringWithToggleCert(Cert cert)
        {
            if (cert != Cert.all)
                cert = Model.FilterCert ^ cert;
            return FormatQueryString(Model.FilterMinRating, Model.FilterNotYetRated, cert);
        }

        string GetFilterStyle(bool hasValue)
        {
            if (hasValue)
                return "success";
            else
                return "default";
        }
    }
    
    Filters:
    <div class="btn-group">
        <a href="?@FormatQueryStringWithMinRating(null)" class="btn btn-@GetFilterStyle(Model.FilterMinRating.HasValue)">
            IMDB Sterren
            @if (Model.FilterMinRating.HasValue)
            {
                @: (@(Model.FilterMinRating.Value.ToString("0.#"))+)
            }
        </a>
        <button type="button" class="btn btn-@GetFilterStyle(Model.FilterMinRating.HasValue) dropdown-toggle" data-toggle="dropdown">
            <span class="caret"></span>  <!-- caret -->
            <span class="sr-only">IMDB Sterren</span>
        </button>
        
        <ul class="dropdown-menu" role="menu"> <!-- class dropdown-menu -->
            <li><a href="?@FormatQueryStringWithMinRating(null)" class="btn-@GetFilterStyle(!Model.FilterMinRating.HasValue)">Toon alle films (@Model.Count)</a></li>
            <li><a href="?@FormatQueryStringWithMinRating(5.0m)" class="btn-@GetFilterStyle(Model.FilterMinRating.HasValue && Model.FilterMinRating.Value == 5.0m)">Enkel met 5+ sterren (@Model.CountMinRating5)</a></li>
            <li><a href="?@FormatQueryStringWithMinRating(6.0m)" class="btn-@GetFilterStyle(Model.FilterMinRating.HasValue && Model.FilterMinRating.Value == 6.0m)">Enkel met 6+ sterren (@Model.CountMinRating6)</a></li>
            <li><a href="?@FormatQueryStringWithMinRating(7.0m)" class="btn-@GetFilterStyle(Model.FilterMinRating.HasValue && Model.FilterMinRating.Value == 7.0m)">Enkel met 7+ sterren (@Model.CountMinRating7)</a></li>
            <li><a href="?@FormatQueryStringWithMinRating(8.0m)" class="btn-@GetFilterStyle(Model.FilterMinRating.HasValue && Model.FilterMinRating.Value == 8.0m)">Enkel met 8+ sterren (@Model.CountMinRating8)</a></li>
            <li><a href="?@FormatQueryStringWithMinRating(9.0m)" class="btn-@GetFilterStyle(Model.FilterMinRating.HasValue && Model.FilterMinRating.Value == 9.0m)">Enkel met 9+ sterren (@Model.CountMinRating9)</a></li>
        </ul>
    </div>

    <div class="btn-group">
        <a href="?@FormatQueryStringWithToggleCert(Cert.all)" class="btn btn-@GetFilterStyle(Model.FilterCert != Cert.all)">
            Certifiëring
        </a>
        <button type="button" class="btn btn-@GetFilterStyle(Model.FilterCert != Cert.all) dropdown-toggle" data-toggle="dropdown">
            <span class="caret"></span>  <!-- caret -->
            <span class="sr-only">Certifiëring</span>
        </button>
        
        <ul class="dropdown-menu" role="menu"> <!-- class dropdown-menu -->
            <li><a href="?@FormatQueryStringWithToggleCert(Cert.g)" class="btn-@GetFilterStyle((Model.FilterCert & Cert.g) != 0)">G (@Model.CountCertG)</a></li>
            <li><a href="?@FormatQueryStringWithToggleCert(Cert.pg)" class="btn-@GetFilterStyle((Model.FilterCert & Cert.pg) != 0)">PG (@Model.CountCertPG)</a></li>
            <li><a href="?@FormatQueryStringWithToggleCert(Cert.pg13)" class="btn-@GetFilterStyle((Model.FilterCert & Cert.pg13) != 0)">PG-13 (@Model.CountCertPG13)</a></li>
            <li><a href="?@FormatQueryStringWithToggleCert(Cert.r)" class="btn-@GetFilterStyle((Model.FilterCert & Cert.r) != 0)">R (@Model.CountCertR)</a></li>
            <li><a href="?@FormatQueryStringWithToggleCert(Cert.nc17)" class="btn-@GetFilterStyle((Model.FilterCert & Cert.nc17) != 0)">NC-17 (@Model.CountCertNC17)</a></li>
            <li><a href="?@FormatQueryStringWithToggleCert(Cert.other)" class="btn-@GetFilterStyle((Model.FilterCert & Cert.other) != 0)">Other (@Model.CountCertOther)</a></li>
            <li><a href="?@FormatQueryStringWithToggleCert(Cert.all)" class="btn-@GetFilterStyle(Model.FilterCert == Cert.all)">Alle films tonen (@Model.Count)</a></li>
        </ul>
    </div>

    <div class="btn-group">
        <a href="?@FormatQueryStringWithNotYetRated(false)" class="btn btn-@GetFilterStyle(Model.FilterNotYetRated)">
            Reeds bekeken
        </a>
        <button type="button" class="btn btn-@GetFilterStyle(Model.FilterNotYetRated) dropdown-toggle" data-toggle="dropdown">
            <span class="caret"></span>  <!-- caret -->
            <span class="sr-only">IMDB Sterren</span>
        </button>
        
        <ul class="dropdown-menu" role="menu"> <!-- class dropdown-menu -->
            <li><a href="?@FormatQueryStringWithNotYetRated(false)" class="btn-@GetFilterStyle(!Model.FilterNotYetRated)">Alle films tonen (@Model.Count)</a></li>
            <li><a href="?@FormatQueryStringWithNotYetRated(true)" class="btn-@GetFilterStyle(Model.FilterNotYetRated)">Enkel films tonen die nog niet zijn bekeken (@Model.CountNotYetRated)</a></li>
            <li class="divider"></li>

            @if (string.IsNullOrEmpty(Model.ImdbUserId))
            {
                <li class="dropdown-header">IMDB gebruiker is niet ingesteld</li>
            }
            else
            {
                @if (Model.RefreshRequestTime.HasValue)
                {
                    <li class="dropdown-header">
                        Er is een refresh van je IMDB ratings gepland.<br/>
                        Refresh de pagina binnen enkele minuten om het resultaat te zien.
                    </li>
                }
                else if (Model.LastRefreshRatingsTime.HasValue)
                {
                    <li class="dropdown-header">
                        Je IMDB ratings werden laatst herladen op @Model.LastRefreshRatingsTime.Value
                    </li>
                }
                else
                {
                    <li class="dropdown-header">
                        Je IMDB ratings werden nog niet opgehaald.
                    </li>
                }
                <li><a href="/ImdbUser?forcerefresh=true">IMDB ratings nu geforceerd herladen</a></li>
                <li class="divider"></li>
                <li class="dropdown-header">IMDB Gebruiker: @(Model.ImdbUserId)</li>
            }
            <li><a href="/ImdbUser">IMDB gebruiker instellen</a></li>
        </ul>
    </div>


    <table class="table">
    <tbody>
        @{
            DateTime? lastDate = null;
            int moviesSinceLastAd = 0;
        }

        @foreach (var record in Model.Records.Where(m => m.MovieEvent.EndTime >= DateTime.Now).OrderBy(m => m.MovieEvent.StartTime))
        {
            var movieEvent = record.MovieEvent;
            @if (lastDate == null || lastDate != movieEvent.StartTime.Date)
            {
                if (lastDate != null && moviesSinceLastAd >= 6)
                {
                    <tr>
                        <td colspan="3">
                            <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
                            <!-- MyComputerAdventures -->
                            <ins class="adsbygoogle"
                                style="display:block"
                                data-ad-client="ca-pub-6612546844038667"
                                data-ad-slot="6049450578"
                                data-ad-format="auto"></ins>
                            <script>
                            (adsbygoogle = window.adsbygoogle || []).push({});
                            </script>
                        </td>
                    </tr>
                    moviesSinceLastAd = 0;
                }

                <tr>
                    <td colspan="3">
                        <h1>@(@movieEvent.StartTime.ToLongDateString())</h1>
                    </td>
                </tr>

                lastDate = movieEvent.StartTime.Date;
            }

            moviesSinceLastAd++;

            <tr>
                <td>
                    <img width=50 src=@(@movieEvent.Channel.LogoS) />
                    <br/>
                    @(@movieEvent.StartTime.ToString("dddd"))
                    <br/>
                    @(@movieEvent.StartTime.ToShortDateString())
                    <br/>
                    @(@movieEvent.StartTime.ToShortTimeString())
                    <br/>
                    @(new TimeSpan((long)@movieEvent.Duration * 600000000).ToString(@"h\:mm"))
                </td>
                <td>
                    @if (@movieEvent.PosterS != null)
                    {
                        <img width=150 src=@(@movieEvent.PosterS) />
                    }
                </td>
                <td>
                    <h2>
                        @movieEvent.Title
                        <small>@movieEvent.Year</small>
                        <small>
                            @if (!string.IsNullOrEmpty(@movieEvent.Certification))
                            {
                                @if (@movieEvent.Certification.Substring(0, 3) == "US:")
                                {
                                    @movieEvent.Certification.Substring(3)
                                }
                                else
                                {
                                    @movieEvent.Certification
                                }
                            }
                        </small>
                        <span style="white-space: nowrap; float: right;">
                            <small>
                                @if (@movieEvent.YeloUrl != null)
                                {
                                    <a href="@movieEvent.YeloUrl" target="_new">
                                        <img src="/images/yeloplay.png" height="36px" />
                                    </a>
                                    
                                }
                                &nbsp;
                                @if (@movieEvent.ImdbId != null)
                                {
                                        <a href="http://www.imdb.com/title/@movieEvent.ImdbId" target="_new">
                                            <img src="/images/imdb.png" height="24px" />
                                            @if (@movieEvent.ImdbRating.HasValue)
                                            {
                                                @((@movieEvent.ImdbRating.Value / 10.0).ToString("0.0"))
                                                <span class="stars">
                                                    <span style="width: @(Math.Round(16.0 * @movieEvent.ImdbRating.Value / 10, 0))px;">
                                                    </span>
                                                </span>
                                            }
                                    </a>
                                }
                                else
                                {
                                    @movieEvent.Id
                                }
                            </small>
                        </span>
                    </h2>
                    <div style="clear: both;">
                        <p>
                            @movieEvent.Genre
                        </p>
                        <p>
                            @movieEvent.Content
                        </p>
                        @if (record.UserRating != null)
                        {
                            <p>
                                <b>
                                    Deze film gaf je op @record.UserRating.RatingDate.ToLongDateString() een rating van 
                                    <span class="badge">@record.UserRating.Rating</span>.
                                </b>
                            </p>
                        }
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
